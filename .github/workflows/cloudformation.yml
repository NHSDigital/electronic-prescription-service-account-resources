name: Cloudformation Actions

on:
  workflow_call:
    inputs:
      stack_name:
        required: true
        type: string
      template:
        required: true
        type: string
      capabilities:
        required: true
        type: string
      execute_change_set:
        required: true
        type: boolean
      env:
        required: true
        type: string
      target_environment:
        required: true
        type: string
      version:
        required: true
        type: string
      change_set_version:
        required: true
        type: string
      dynamic_vars:
        required: false
        type: string
        default: "{}"
    secrets:
      cf_deploy_role:
        required: false
      parameter_secrets:
        required: false
      cf_create_changeset_role:
        required: true

jobs:
  create_change_set:
    name: Create CF Change Set
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      CAPABILITIES: ${{ inputs.capabilities }}
      CHANGE_SET_VERSION: ${{ inputs.change_set_version }}
      STACK_NAME: ${{ inputs.stack_name }}
      TARGET_ENVIRONMENT: ${{ inputs.target_environment }}
      TEMPLATE: ${{ inputs.template }}
      VERSION: ${{ inputs.version }}
    outputs:
      parameters_file_name: ${{ steps.parse_parameters.outputs.PARAMETERS_FILE_NAME }}
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}
        fetch-depth: 0

    - name: Assume create changeset role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.cf_create_changeset_role}}
        role-session-name: github-actions

    - name: check stack exists
      id: check_stack_exists
      shell: bash
      working-directory: .github/scripts
      run: ./check_stack_exists.sh

    # ***************************************************
    # This does not work for int and prod as this job does not specify an environment 
    # if we do specify an environment, it will ask for confirmation before creating a changeset
    # which is not what we want
    # ***************************************************

    - name: Assume create deploy stack role
      if: ${{ steps.check_stack_exists.outputs.STACK_EXISTS == 'false' }} 
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.cf_deploy_role}}
        role-session-name: github-actions

    - name: create stack
      if: ${{ steps.check_stack_exists.outputs.STACK_EXISTS == 'false' }} 
      shell: bash
      run: |
        aws cloudformation create-stack --stack-name ${{ inputs.stack_name }} \
        --template-body file://./cloudformation/empty_stack.yml

    - name: Assume create changeset role
      if: ${{ steps.check_stack_exists.outputs.STACK_EXISTS == 'false' }} 
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.cf_create_changeset_role}}
        role-session-name: github-actions
        
    - name: Parse Parameters
      env:
        parameter_secrets: ${{ secrets.parameter_secrets }}
        dynamic_vars: ${{ inputs.dynamic_vars }}
      id: parse_parameters
      shell: bash
      run: |
        PARAMETERS_FILE_NAME=$(python scripts/parse_parameters.py ${{ inputs.target_environment }} ${{ inputs.stack_name }})
        cat "$PARAMETERS_FILE_NAME"
        echo "PARAMETERS_FILE_NAME=${PARAMETERS_FILE_NAME}" >> "$GITHUB_OUTPUT"

    - name: Create Change Set with new tags
      shell: bash
      working-directory: .github/scripts
      env:
        PARAMETERS: ${{ steps.parse_parameters.outputs.PARAMETERS_FILE_NAME }}
      run: ./create_changeset_new_tags.sh

    - name: Create Change Set with existing tags
      shell: bash
      working-directory: .github/scripts
      env:
        PARAMETERS: ${{ steps.parse_parameters.outputs.PARAMETERS_FILE_NAME }}
      run: ./create_changeset_existing_tags.sh

    - name: Header output
      shell: bash
      working-directory: .github/scripts
      run: ./header_output.sh

    - name: Describe Full Change Set
      shell: bash
      working-directory: .github/scripts
      env:
        CHANGESET_NAME: ${{ inputs.stack_name }}-${{ inputs.change_set_version }}
        SUMMARY: "[${{ inputs.target_environment }}] FULL Change Set for ${{ inputs.stack_name }}"
      run: ./describe_changeset.sh

    - name: Describe Change Set for existing tag
      shell: bash
      working-directory: .github/scripts
      env:
        CHANGESET_NAME: ${{ inputs.stack_name }}-${{ inputs.change_set_version }}-current-tag
        SUMMARY: "[${{ inputs.target_environment }}] Change Set for ${{ inputs.stack_name }} with existing tag"
      run: ./describe_changeset.sh

    - name: Delete Change Set for new tag
      if: ${{ inputs.execute_change_set == false }}
      shell: bash
      run: |
        aws cloudformation delete-change-set \
        --stack-name ${{ inputs.stack_name }} \
        --change-set-name ${{ inputs.stack_name }}-${{ inputs.change_set_version }}

    - name: Delete Change Set for existing tag
      shell: bash
      run: |
        aws cloudformation delete-change-set \
        --stack-name ${{ inputs.stack_name }} \
        --change-set-name ${{ inputs.stack_name }}-${{ inputs.change_set_version }}-current-tag
  
  execute_change_set:
    name: Execute Change Set
    if: ${{ inputs.execute_change_set == true }}
    needs: create_change_set
    runs-on: ubuntu-latest
    environment: ${{ inputs.target_environment }}
    permissions:
      id-token: write
      contents: write
    env:
      CHANGE_SET_VERSION: ${{ inputs.change_set_version }}
      STACK_NAME: ${{ inputs.stack_name }}
    steps:
      - name: Checkout scripts
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          sparse-checkout: |
            .github/scripts

      - name: Assume deploy changeset role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.cf_deploy_role }}
          role-session-name: github-actions

      - name: Execute Change Set
        shell: bash
        working-directory: .github/scripts
        run: ./execute_changeset.sh

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Update release tag in github pages
        run: |
          cd gh-pages
          NOW=$(date +'%Y-%m-%dT%H:%M:%S')
          echo "tag,release_datetime" > _data/${{ inputs.TARGET_ENVIRONMENT }}_${{ inputs.STACK_NAME }}_latest.csv
          echo "${{ inputs.version }},${NOW}" >> _data/${{ inputs.TARGET_ENVIRONMENT }}_${{ inputs.STACK_NAME }}_latest.csv
          echo "${{ inputs.version }},${NOW}" >> _data/${{ inputs.TARGET_ENVIRONMENT }}_${{ inputs.STACK_NAME }}_deployments.csv
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add _data/${{ inputs.TARGET_ENVIRONMENT }}_${{ inputs.STACK_NAME }}_latest.csv
          git add _data/${{ inputs.TARGET_ENVIRONMENT }}_${{ inputs.STACK_NAME }}_deployments.csv
          git commit -m 'update releases for ${{ inputs.TARGET_ENVIRONMENT }} and stack ${{ inputs.STACK_NAME }}'
          parallel --retries 10 --delay 3 ::: "git pull --rebase && git push"
