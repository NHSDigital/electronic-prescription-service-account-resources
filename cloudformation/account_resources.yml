AWSTemplateFormatVersion: "2010-09-09"
Resources:
  #region API Gateway
  ApiGwCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole

  AllowApiGwLoggingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref ApiGwCloudWatchRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              - logs:GetLogEvents
              - logs:FilterLogEvents
              - logs:CreateLogDelivery
              - logs:PutResourcePolicy
              - logs:UpdateLogDelivery
              - logs:DeleteLogDelivery
              - logs:DescribeResourcePolicies
              - logs:GetLogDelivery
              - logs:ListLogDeliveries
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/*"
  #endregion

  #region Account
  Account:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGwCloudWatchRole.Arn
    DependsOn: AllowApiGwLoggingPolicy
  #endregion

  #region Cloudwatch
  CloudwatchResourcePolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: AWSLogDeliveryWrite20150319
      PolicyDocument: '{ "Version": "2012-10-17", "Statement": [ { "Sid": "AWSLogDeliveryWrite", "Effect": "Allow", "Principal": { "Service": "delivery.logs.amazonaws.com" }, "Action": [ "logs:CreateLogStream", "logs:PutLogEvents" ], "Resource": [ "*" ] } ] }'

  CloudwatchLogsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-policy-id
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Sid: Allow Service Logging
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnEquals:
                kms:EncryptionContext:aws:logs:arn:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda-insights*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/stepfunctions/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/ecs/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:artilleryio-log-group/artilleryio-cluster"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vpc/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/containerinsights/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vendedlogs/*"
          - Sid: Allow API Gateway Role
            Effect: Allow
            Principal:
              AWS: !GetAtt ApiGwCloudWatchRole.Arn
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/*"
          - Sid: Allow Deployment Role
            Effect: Allow
            Principal:
              AWS:
                - !ImportValue ci-resources:CloudFormationExecutionRole
                - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-eu-west-2
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource: "*"

  CloudwatchLogsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/CloudwatchLogsKmsKeyAlias
      TargetKeyId: !Ref CloudwatchLogsKmsKey

  LambdaEncryptCloudwatchKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt CloudwatchLogsKmsKey.Arn

  CloudwatchEncryptionKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt CloudwatchLogsKmsKey.Arn
  #endregion

  #region IAM Roles & Policies
  SNSFeedbackLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref SNSFeedbackLoggingPolicy

  SNSFeedbackLoggingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:PutMetricFilter
              - logs:PutRetentionPolicy
            Resource: "*"

  #region Artifacts Bucket
  ArtifactsBucketKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  ArtifactsBucketKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/ArtifactsBucketKMSKeyAlias
      TargetKeyId: !Ref ArtifactsBucketKMSKey

  UseArtifactBucketKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
        - !ImportValue ci-resources:CloudFormationPrepareChangesetRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt ArtifactsBucketKMSKey.Arn

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: artifact/
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${ArtifactsBucketKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS:
                - !ImportValue ci-resources:CloudFormationDeployRole
                - !ImportValue ci-resources:CloudFormationExecutionRole
                - !ImportValue ci-resources:CloudFormationPrepareChangesetRole
            Action:
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
  #endregion

  #region Trust Store Bucket
  TrustStoreBucketKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  TrustStoreBucketKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/TrustStoreBucketKMSKeyAlias
      TargetKeyId: !Ref TrustStoreBucketKMSKey

  UseTrustStoreBucketKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt TrustStoreBucketKMSKey.Arn

  TrustStoreBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: truststore/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${TrustStoreBucketKMSKeyKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  TrustStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref TrustStoreBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS:
                - !ImportValue ci-resources:CloudFormationDeployRole
                - !ImportValue ci-resources:CloudFormationExecutionRole
                - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-eu-west-2
            Action:
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn
  #endregion

  #region Audit Logging Bucket
  AuditLoggingBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED    
        - S3_BUCKET_LOGGING_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  AuditLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref AuditLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/*"]]
              - !GetAtt AuditLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join [
                  "",
                  [
                    !GetAtt AuditLoggingBucket.Arn,
                    "/splunkDeliveryStreamBackup/*",
                  ],
                ]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt SplunkDeliveryStreamBackupBucket.Arn
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/artifact/*"]]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt ArtifactsBucket.Arn
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/truststore/*"]]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt TrustStoreBucket.Arn
          # add this in once cpt-ui gets released to all environments
          # - Effect: Allow
          #   Principal:
          #     Service: logging.s3.amazonaws.com
          #   Action:
          #     - s3:PutObject*
          #   Resource:
          #     - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/static-content/*"]]
          #   Condition:
          #     StringEquals:
          #       aws:SourceAccount: !Ref "AWS::AccountId"
          #     ArnLike:
          #       aws:SourceArn: !ImportValue "cpt-ui-shared-resources:StaticContentBucket:Arn"
  #endregion

  #region Cloudfront Logs Bucket

  CloudfrontLoggingBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED    
        - S3_BUCKET_LOGGING_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  CloudfrontLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref CloudfrontLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join ["", [!GetAtt CloudfrontLoggingBucket.Arn, "/*"]]
              - !GetAtt CloudfrontLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join [
                  "",
                  [
                    !GetAtt CloudfrontLoggingBucket.Arn,
                    "/*",
                  ],
                ]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn:  !Sub arn:aws:cloudfront:${AWS::AccountId}:distribution:*

  ALBLoggingBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED    
        - S3_BUCKET_LOGGING_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  ALBLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref ALBLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join ["", [!GetAtt ALBLoggingBucket.Arn, "/*"]]
              - !GetAtt ALBLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::652711504416:root
            Action:
              - s3:PutObject
            Resource:
              - !Join [
                  "",
                  [
                    !GetAtt ALBLoggingBucket.Arn,
                    "/*",
                  ],
                ]

  #end region

  #region athena results Bucket
  AthenaResultsBucketKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  AthenaResultsBucketKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/AthenaResultsBucketKMSKeyAlias
      TargetKeyId: !Ref AthenaResultsBucketKMSKey

  AthenaResultsBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED    
        - S3_BUCKET_LOGGING_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${AthenaResultsBucketKMSKeyKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  AthenaResultsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref AthenaResultsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join ["", [!GetAtt AthenaResultsBucket.Arn, "/*"]]
              - !GetAtt AthenaResultsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
  #end region

  #region Splunk Delivery Stream Backup Bucket
  SplunkDeliveryStreamBackupKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  SplunkDeliveryStreamBackupKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SplunkDeliveryStreamBackupKMSKeyAlias
      TargetKeyId: !Ref SplunkDeliveryStreamBackupKMSKey

  SplunkDeliveryStreamBackupBucketRoleKMSMangedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref SplunkDeliveryStreamBackupBucketRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupKMSKey.Arn

  SplunkDeliveryStreamBackupBucketRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole

  SplunkDeliveryStreamBackupBucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED
        - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: splunkDeliveryStreamBackup/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: false
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${SplunkDeliveryStreamBackupKMSKeyAlias}"

  SplunkDeliveryStreamBackupBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_SSL_REQUESTS_ONLY    
    Properties:
      Bucket: !Ref SplunkDeliveryStreamBackupBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - !Join ["", [!GetAtt SplunkDeliveryStreamBackupBucket.Arn, "/*"]]
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt SplunkDeliveryStreamBackupBucketRole.Arn
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
              - !Join # Access to bucket contents
                - ""
                - - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
                  - "/*"

  SplunkDeliveryStreamBackupBucketIAMManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref SplunkDeliveryStreamBackupBucketRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
              - !Join # Access to bucket contents
                - ""
                - - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
                  - "/*"
  #endregion

  #region ECR Repositories
  FHIRFacadeRepo:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: fhir-facade-repo
      ImageScanningConfiguration: 
        ScanOnPush: true    
    
  ValidatorRepo:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: validator-repo
      ImageScanningConfiguration: 
        ScanOnPush: true

  CDKUtilsBuildRepo:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: cdk-utils-build-repo
      ImageScanningConfiguration: 
        ScanOnPush: true    
  #endregion

  #region Secrets KMS
  SecretsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  SecretsKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SecretsKMSKeyAlias
      TargetKeyId: !Ref SecretsKMSKey

  UseSecretsKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt*
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt SecretsKMSKey.Arn

  LambdaDecryptSecretsKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !GetAtt SecretsKMSKey.Arn
  #endregion

  #region SNS KMS
  SnsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-sns
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Sid: Enable Cloudwatch Alarms
            Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt*
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: "*"
          - Sid: Enable SQS
            Effect: Allow
            Principal:
              Service: sqs.amazonaws.com
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: "*"

  SnsKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SnsKMSKeyAlias
      TargetKeyId: !Ref SnsKMSKey

  UseSnsKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt*
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt SnsKMSKey.Arn

  SnsDecryptSecretsKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !GetAtt SnsKMSKey.Arn
  #endregion

  #region SQS KMS
  SqsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-sqs
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Sid: Enable SNS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt*
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: "*"
    
  SqsKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SqsKMSKeyAlias
      TargetKeyId: !Ref SqsKMSKey

  UseSqsKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt*
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt SqsKMSKey.Arn

  SqsDecryptSecretsKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !GetAtt SqsKMSKey.Arn
  #endregion

  #region PfP CA Secrets
  PfpCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP CA certificate
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region PfP Client Secrets
  PfpClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region Clinical Tracker CA Secrets
  ClinicalTrackerCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker CA secret
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region Clinical Tracker Client Secrets
  ClinicalTrackerClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region PSU CA Secrets
  PsuCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update CA secret
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region PSU Client Secrets
  PsuClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region EPS FHIR Facade CA Secrets
  FhirFacadeCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade CA secret
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  # EPS FHIR Facade Client Secrets
  FhirFacadeClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region Spine Secrets
  SpinePrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for spine mutual TLS
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePublicCertificate:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public certificate for spine mutual TLS
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpineASID:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: ASID for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePartyKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PartyKey for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpineCAChain:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: CA chain for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
  #endregion

  #region Other Secrets
  ServiceSearchApiKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: API key for service search
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  JiraToken:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Jira token for creating release notes
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-jiraToken"

  ConfluenceToken:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Confluence token for creating release notes
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-confluenceToken"

  # keys for proxygen
  # when adding new keys, you need to add a filter to cloudformation/env/prod.json to allow the repo to access the lambdas
  PSUProxygenPrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for psu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-PSU-ProxygenPrivateKey"

  PSUProxygenPublicKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public key for psu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-PSU-ProxygenPublicKey"

  CPSUProxygenPrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for cpsu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-CPSU-ProxygenPrivateKey"

  CPSUProxygenPublicKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public key for cpsu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-CPSU-ProxygenPublicKey"

  ClinicalTrackerProxygenPrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for clinical tracker proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-ClinicalTracker-ProxygenPrivateKey"

  ClinicalTrackerProxygenPublicKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public key for clinical tracker proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-ClinicalTracker-ProxygenPublicKey"

  LambdaAccessSecretsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref SpinePrivateKey
              - !Ref SpinePublicCertificate
              - !Ref SpineASID
              - !Ref SpinePartyKey
              - !Ref SpineCAChain
              - !Ref ServiceSearchApiKey

  SplunkHECToken:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Splunk HEC token
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-SplunkHECToken"
  
  SlackWebHookUrl:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: slack webhook url
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-SlackWebhookUrl"
  
  AccessSlackSecretsManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref SlackWebHookUrl
  #endregion

  #region DashboardViewerPolicy
  # policy to allow access to dashboards
  # adapted from AWS managed policy CloudWatchAutomaticDashboardsAccess
  # and https://repost.aws/questions/QUnUkhd8loQ92Axnzd_EvLCw/how-to-grant-someone-else-cloudwatch-dashboard-view-access
  DashboardViewerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DashboardViewer
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudwatch:DescribeAlarmHistory
              - cloudwatch:DescribeAlarms
              - cloudwatch:GetDashboard
              - cloudfront:GetDistribution
              - dynamodb:DescribeTable
              - ecs:DescribeClusters
              - ecs:DescribeContainerInstances
              - ecs:ListContainerInstances
              - elasticloadbalancing:DescribeLoadBalancers
              - kinesis:DescribeStream
              - lambda:GetFunction
              - resource-groups:ListGroupResources
              - route53:GetHealthCheck
              - s3:ListBucket
              - sns:ListTopics
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - tag:GetResources
            Resource: 
            - !Sub "arn:aws:cloudwatch:*:${AWS::AccountId}:*"
            - !Sub "arn:aws:cloudfront::${AWS::AccountId}:*"
            - !Sub "arn:aws:dynamodb::${AWS::AccountId}:*"
            - !Sub "arn:aws:ecs:eu-west-2:${AWS::AccountId}:*"
            - !Sub "arn:aws:elasticloadbalancing:eu-west-2:${AWS::AccountId}:*"
            - !Sub "arn:aws:kinesis:eu-west-2:${AWS::AccountId}:*"
            - !Sub "arn:aws:lambda:eu-west-2:${AWS::AccountId}:*"
            - !Sub "arn:aws:resource-groups:eu-west-2:${AWS::AccountId}:*"
            - "arn:aws:route53:::*"
            - "arn:aws:s3:::*"
            - !Sub "arn:aws:sns:eu-west-2:${AWS::AccountId}:*"
            - !Sub "arn:aws:sqs:eu-west-2:${AWS::AccountId}:*"
            - !Sub "arn:aws:tag::${AWS::AccountId}:*"
          - Effect: Allow
            Resource:
            - arn:aws:apigateway:eu-west-2::/restapis*
            Action:
            - apigateway:GET
          - Effect: Allow
            Action:
              - cloudfront:ListDistributions
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListDashboards
              - cloudwatch:ListMetrics
              - dynamodb:ListTables
              - ecs:ListClusters
              - ecs:ListServices
              - kinesis:ListStreams
              - lambda:ListFunctions
              - resource-groups:ListGroups
              - route53:ListHealthChecks
              - s3:ListAllMyBuckets
              - sqs:ListQueues
            Resource: "*"
  #endregion

  #region EPSReadOnlyKMSPolicy
  # policy to allow readonly role access to decrypt using kms keys
  EPSReadOnlyKMSDecryptPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: EPSReadOnlyKMSDecryptPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: 
              - !Sub arn:aws:kms:eu-west-2:${AWS::AccountId}:key/*
  #endregion


  #region EPSDevopsPolicy
  # policy to allow access to common devops tasks
  # currently this is to do KOP-015 and manage codebuild deployments
  EPSDevopsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: EPSDevopsPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt TrustStoreBucketKMSKey.Arn
          - Effect: Allow
            Action:
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn
          - Effect: Allow
            Action:
              - secretsmanager:PutSecretValue
            Resource:
              - !Ref PfpCAKeySecret
              - !Ref PfpCACertSecret
              - !Ref PfpClientKeySecret
              - !Ref PfpClientCertSecret
              - !Ref PfpClientSandboxKeySecret
              - !Ref PfpClientSandboxCertSecret
              - !Ref ClinicalTrackerCAKeySecret
              - !Ref ClinicalTrackerCACertSecret
              - !Ref ClinicalTrackerClientKeySecret
              - !Ref ClinicalTrackerClientCertSecret
              - !Ref ClinicalTrackerClientSandboxKeySecret
              - !Ref ClinicalTrackerClientSandboxCertSecret
              - !Ref PsuCAKeySecret
              - !Ref PsuCACertSecret
              - !Ref PsuClientKeySecret
              - !Ref PsuClientCertSecret
              - !Ref PsuClientSandboxKeySecret
              - !Ref PsuClientSandboxCertSecret
              - !Ref FhirFacadeCAKeySecret
              - !Ref FhirFacadeCACertSecret
              - !Ref FhirFacadeClientKeySecret
              - !Ref FhirFacadeClientCertSecret
              - !Ref FhirFacadeClientSandboxKeySecret
              - !Ref FhirFacadeClientSandboxCertSecret
          - Effect: Allow
            Resource: "*"
            Action:
              - codepipeline:PutApprovalResult
              - codepipeline:RetryStageExecution
              - codepipeline:RollbackStage
              - codepipeline:StartPipelineExecution
              - codepipeline:StopPipelineExecution

  #endregion

  # region inspector filters
  # these are CVEs that should be ignored when scanning container images uploaded to ECR
  # we should only add items into here when the vulnerability is not one that affects us,
  # or there is agreement that we will not fix it and it is not a critical vulnerability for us

  SuppressCVE202522235:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-22235
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-22235
      Name: suppress_CVE-2025-22235

  SuppressCVE202521587:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-21587
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-21587
      Name: suppress_CVE-2025-21587

  SuppressCVE202455887:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2024-55887
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2024-55887
      Name: suppress_CVE-2024-55887

  SuppressCVE202452007:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2024-52007
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2024-52007
      Name: suppress_CVE-2024-52007

  SuppressCVE202451132:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2024-51132
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2024-51132
      Name: suppress_CVE-2024-51132

  SuppressCVE202445294:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2024-45294
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2024-45294
      Name: suppress_CVE-2024-45294

  SuppressCVE20232976:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2023-2976
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2023-2976
      Name: suppress_CVE-2023-2976

  SuppressCVE202328465:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2023-28465
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2023-28465
      Name: suppress_CVE-2023-28465

  SuppressCVE202324057:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2023-24057
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2023-24057
      Name: suppress_CVE-2023-24057

  SuppressCVE202242889:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2022-42889
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2022-42889
      Name: suppress_CVE-2022-42889

  SuppressCVE202136090:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2021-36090
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2021-36090
      Name: suppress_CVE-2021-36090

  SuppressCVE202135517:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2021-35517
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2021-35517
      Name: suppress_CVE-2021-35517

  SuppressCVE202135516:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2021-35516
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2021-35516
      Name: suppress_CVE-2021-35516 

  SuppressCVE202135515:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2021-35515
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2021-35515
      Name: suppress_CVE-2021-35515

  SuppressCVE202531650:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-31650
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-31650
      Name: suppress_CVE-2025-31650

  SuppressCVE202531651:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-31651
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-31651
      Name: suppress_CVE-2025-31651

  SuppressCVE202523166:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-23166
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-23166
      Name: suppress_CVE-2025-23166

  SuppressCVE202546701:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-46701
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-46701
      Name: suppress_CVE-2025-46701

  SuppressCVE202548988:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-48988
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-48988
      Name: suppress_CVE-2025-48988

  SuppressCVE202549125:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-49125
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-49125
      Name: suppress_CVE-2025-49125

  SuppressCVE202550059:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-50059
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-50059
      Name: suppress_CVE-2025-50059

  SuppressCVE202530749:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-30749
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-30749
      Name: suppress_CVE-2025-30749

  SuppressCVE202550106:
    Type: AWS::InspectorV2::Filter
    Properties:
      Description: CVE-2025-50106
      FilterAction: SUPPRESS
      FilterCriteria: 
        VulnerabilityId:
          - Comparison: EQUALS
            Value: CVE-2025-50106
      Name: suppress_CVE-2025-50106
  #endregion

Outputs:
  #region Cloudwatch Outputs
  CloudwatchLogsKmsKeyArn:
    Description: "The Arn of the API GW cloudwatch logs KMS Key"
    Value: !GetAtt CloudwatchLogsKmsKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudwatchLogsKmsKeyArn"]]

  LambdaEncryptCloudwatchKMSPolicy:
    Description: "Lambda Encrypt Cloudwatch KMS Policy ARN"
    Value: !GetAtt LambdaEncryptCloudwatchKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "LambdaEncryptCloudwatchKMSPolicy"]]

  CloudwatchEncryptionKMSPolicyArn:
    Description: "Cloudwatch Encryption KMS Policy ARN"
    Value: !GetAtt CloudwatchEncryptionKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "CloudwatchEncryptionKMSPolicyArn"]]
  #endregion

  #region IAM Roles & Policies Outputs
  SNSFeedbackLoggingRoleArn:
    Description: "The Arn of the SNS feedback logging role"
    Value: !GetAtt SNSFeedbackLoggingRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SNSFeedbackLoggingRoleArn"]]
  #endregion

  #region Artifacts Bucket Outputs
  ArtifactsBucket:
    Description: ARN of the Artifacts bucket
    Value: !GetAtt ArtifactsBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ArtifactsBucket"]]
  #endregion

  #region Trust Store Bucket Outputs
  TrustStoreBucket:
    Description: ARN of the Truststore bucket
    Value: !GetAtt TrustStoreBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "TrustStoreBucket"]]
  #endregion

  #region Audit Logging Bucket Outputs
  AuditLoggingBucket:
    Description: ARN of the audit logging bucket
    Value: !GetAtt AuditLoggingBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AuditLoggingBucket"]]
  #endregion

  #region Cloudfront Logging Bucket Outputs
  CloudfrontLoggingBucket:
    Description: ARN of the cloudfront logging bucket
    Value: !GetAtt CloudfrontLoggingBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudfrontLoggingBucket"]]
  #endregion

  #region ALB Logging Bucket Outputs
  ALBLoggingBucketArn:
    Description: ARN of the ALB logging bucket
    Value: !GetAtt ALBLoggingBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ALBLoggingBucketArn"]]

  ALBLoggingBucketName:
    Description: Name of the ALB logging bucket
    Value: !Ref ALBLoggingBucket
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ALBLoggingBucketName"]]

  #endregion


  #region athena results Bucket Outputs
  AthenaResultsBucketArn:
    Description: ARN of the Athena results bucket
    Value: !GetAtt AthenaResultsBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AthenaResultsBucketArn"]]

  AthenaResultsBucketName:
    Description: Name of the Athena results bucket
    Value: !Ref AthenaResultsBucket
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AthenaResultsBucketName"]]

  #endregion


  #region Splunk Delivery Stream Backup Bucket Outputs
  SplunkDeliveryStreamBackupKMSKey:
    Description: SplunkDeliveryStreamBackupKMSKey
    Value: !GetAtt SplunkDeliveryStreamBackupKMSKey.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupKMSKey"]]

  SplunkDeliveryStreamBackupBucketRole:
    Description: The splunk delivery stream role
    Value: !Ref SplunkDeliveryStreamBackupBucketRole
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucketRole"],
        ]

  SplunkDeliveryStreamBackupBucketRoleArn:
    Description: The splunk delivery stream role
    Value: !GetAtt SplunkDeliveryStreamBackupBucketRole.Arn
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucketRoleArn"],
        ]

  SplunkDeliveryStreamBackupBucket:
    Description: ARN of the splunk delivery stream backup bucket
    Value: !GetAtt SplunkDeliveryStreamBackupBucket.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucket"]]
  #endregion

  #region ECR Repositories Outputs
  FHIRFacadeRepoArn:
    Description: "The Arn of the FHIR Facade ECR repo"
    Value: !GetAtt FHIRFacadeRepo.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FHIRFacadeRepoArn"]]

  FHIRFacadeRepoUri:
    Description: "The URI of the FHIR Facade ECR repo"    
    Value: !GetAtt FHIRFacadeRepo.RepositoryUri
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FHIRFacadeRepoUri"]]

  ValidatorRepoArn:
    Description: "The Arn of the Validator repo"
    Value: !GetAtt ValidatorRepo.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ValidatorRepoArn"]]     

  ValidatorRepoUri:
    Description: "The URI of the Validator ECR repo"    
    Value: !GetAtt ValidatorRepo.RepositoryUri
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ValidatorRepoUri"]]

  CDKUtilsBuildRepoArn:
    Description: "The Arn of the Validator repo"
    Value: !GetAtt CDKUtilsBuildRepo.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CDKUtilsBuildRepoArn"]]     

  CDKUtilsBuildRepoUri:
    Description: "The URI of the Validator ECR repo"    
    Value: !GetAtt CDKUtilsBuildRepo.RepositoryUri
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CDKUtilsBuildRepoUri"]]
  #endregion

  #region Secrets KMS Outputs
  SecretsKMSKey:
    Description: SecretsKMSKey
    Value: !GetAtt SecretsKMSKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SecretsKMSKey"]]
  
  SecretsKMSKeyAlias:
    Description: SecretsKMSKeyAlias
    Value: !Ref SecretsKMSKeyKMSKeyAlias
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SecretsKMSKeyAlias"]]

  LambdaDecryptSecretsKMSPolicy:
    Description: "Lambda Decrypt Secrets KMS Policy ARN"
    Value: !GetAtt LambdaDecryptSecretsKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "LambdaDecryptSecretsKMSPolicy"]]
  #endregion

  #region SNS KMS Outputs
  SnsKMSKey:
    Description: SnsKMSKey
    Value: !GetAtt SnsKMSKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SnsKMSKey"]]

  SnsDecryptSecretsKMSPolicy:
    Description: "SNS Decrypt Secrets KMS Policy ARN"
    Value: !GetAtt SnsDecryptSecretsKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SnsDecryptSecretsKMSPolicy"]]
  #endregion

  #region SQS KMS Outputs
  SqsKMSKey:
    Description: SqsKMSKey
    Value: !GetAtt SqsKMSKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SqsKMSKey"]]

  SqsDecryptSecretsKMSPolicy:
    Description: "SQS Decrypt Secrets KMS Policy ARN"
    Value: !GetAtt SqsDecryptSecretsKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SqsDecryptSecretsKMSPolicy"]]
  #endregion

  #region PfP CA Secrets Outputs
  PfpCAKeySecret:
    Description: ARN of the PfP CA key secret
    Value: !GetAtt PfpCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpCAKeySecret"]]

  PfpCACertSecret:
    Description: ARN of the PfP CA cert secret
    Value: !GetAtt PfpCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpCACertSecret"]]
  #endregion

  #region PfP Client Secrets Outputs
  PfpClientKeySecret:
    Description: ARN of the PfP client key secret
    Value: !GetAtt PfpClientKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientKeySecret"]]

  PfpClientCertSecret:
    Description: ARN of the PfP client cert secret
    Value: !GetAtt PfpClientCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientCertSecret"]]

  PfpClientSandboxKeySecret:
    Description: ARN of the PfP client key secret for sandbox
    Value: !GetAtt PfpClientSandboxKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientSandboxKeySecret"]]

  PfpClientSandboxCertSecret:
    Description: ARN of the PfP client cert secret for sandbox
    Value: !GetAtt PfpClientSandboxCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientSandboxCertSecret"]]
  #endregion

  #region Clinical Tracker CA Secrets Outputs
  ClinicalTrackerCAKeySecret:
    Description: ARN of the clinical tracker CA key secret
    Value: !GetAtt ClinicalTrackerCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerCAKeySecret"]]

  ClinicalTrackerCACertSecret:
    Description: ARN of the clinical tracker CA cert secret
    Value: !GetAtt ClinicalTrackerCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerCACertSecret"]]
  #endregion

  #region Clinical Tracker Client Secrets Outputs
  ClinicalTrackerClientKeySecret:
    Description: ARN of the clinical tracker client key secret
    Value: !GetAtt ClinicalTrackerClientKeySecret.Id
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerClientKeySecret"]]

  ClinicalTrackerClientCertSecret:
    Description: ARN of the clinical tracker client cert secret
    Value: !GetAtt ClinicalTrackerClientCertSecret.Id
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerClientCertSecret"]]

  ClinicalTrackerClientSandboxKeySecret:
    Description: ARN of the clinical tracker client key secret for sandbox
    Value: !GetAtt ClinicalTrackerClientSandboxKeySecret.Id
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "ClinicalTrackerClientSandboxKeySecret"],
        ]

  ClinicalTrackerClientSandboxCertSecret:
    Description: ARN of the clinical tracker client cert secret for sandbox
    Value: !GetAtt ClinicalTrackerClientSandboxCertSecret.Id
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "ClinicalTrackerClientSandboxCertSecret"],
        ]
  #endregion

  #region PSU CA Secrets Outputs
  PsuCAKeySecret:
    Description: ARN of the prescription status update CA key secret
    Value: !GetAtt PsuCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuCAKeySecret"]]

  PsuCACertSecret:
    Description: ARN of the prescription status update CA cert secret
    Value: !GetAtt PsuCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuCACertSecret"]]
  #endregion

  #region PSU Client Secrets Outputs
  PsuClientKeySecret:
    Description: ARN of the prescription status update client key secret
    Value: !GetAtt PsuClientKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientKeySecret"]]

  PsuClientCertSecret:
    Description: ARN of the prescription status update client cert secret
    Value: !GetAtt PsuClientCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientCertSecret"]]

  PsuClientSandboxKeySecret:
    Description: ARN of the prescription status update client key secret for sandbox
    Value: !GetAtt PsuClientSandboxKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientSandboxKeySecret"]]

  PsuClientSandboxCertSecret:
    Description: ARN of the prescription status update client cert secret for sandbox
    Value: !GetAtt PsuClientSandboxCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientSandboxCertSecret"]]
  #endregion

  #region EPS FHIR Facade CA Secrets Outputs
  FhirFacadeCAKeySecret:
    Description: ARN of the EPS FHIR facade CA key secret
    Value: !GetAtt FhirFacadeCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeCAKeySecret"]]

  FhirFacadeCACertSecret:
    Description: ARN of the EPS FHIR facade CA cert secret
    Value: !GetAtt FhirFacadeCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeCACertSecret"]]

  #region EPS FHIR Facade Client Secrets Outputs
  FhirFacadeClientKeySecret:
    Description: ARN of the EPS FHIR facade client key secret
    Value: !GetAtt FhirFacadeClientKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientKeySecret"]]

  FhirFacadeClientCertSecret:
    Description: ARN of the EPS FHIR facade client cert secret
    Value: !GetAtt FhirFacadeClientCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientCertSecret"]]

  FhirFacadeClientSandboxKeySecret:
    Description: ARN of the EPS FHIR facade client key secret for sandbox
    Value: !GetAtt FhirFacadeClientSandboxKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientSandboxKeySecret"]]

  FhirFacadeClientSandboxCertSecret:
    Description: ARN of the EPS FHIR facade client cert secret for sandbox
    Value: !GetAtt FhirFacadeClientSandboxCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientSandboxCertSecret"]]
  #endregion

  #region Spine Secrets Outputs
  SpinePrivateKey:
    Description: ARN of the private key for spine mutual TLS
    Value: !GetAtt SpinePrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePrivateKey"]]

  SpinePublicCertificate:
    Description: ARN of the public certificate for spine mutual TLS
    Value: !GetAtt SpinePublicCertificate.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePublicCertificate"]]

  SpineASID:
    Description: ASID for spine
    Value: !GetAtt SpineASID.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpineASID"]]

  SpinePartyKey:
    Description: PartyKey for spine
    Value: !GetAtt SpinePartyKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePartyKey"]]

  SpineCAChain:
    Description: SpineCAChain
    Value: !GetAtt SpineCAChain.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpineCAChain"]]
  #endregion

  #region Other Secrets Outputs
  ServiceSearchApiKey:
    Description: ServiceSearchApiKey
    Value: !GetAtt ServiceSearchApiKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ServiceSearchApiKey"]]

  JiraToken:
    Description: JiraToken
    Value: !GetAtt JiraToken.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "JiraToken"]]

  ConfluenceToken:
    Description: ConfluenceToken
    Value: !GetAtt ConfluenceToken.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ConfluenceToken"]]

  LambdaAccessSecretsPolicy:
    Description: "Lambda Access Secrets Policy ARN"
    Value: !GetAtt LambdaAccessSecretsPolicy.PolicyArn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "LambdaAccessSecretsPolicy"]]

  SplunkHECToken:
    Description: SplunkHECToken
    Value: !GetAtt SplunkHECToken.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SplunkHECToken"]]

  PSUProxygenPrivateKey:
    Description: PSUProxygenPrivateKey
    Value: !GetAtt PSUProxygenPrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PSUProxygenPrivateKey"]]

  PSUProxygenPublicKey:
    Description: PSUProxygenPublicKey
    Value: !GetAtt PSUProxygenPublicKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PSUProxygenPublicKey"]]

  CPSUProxygenPrivateKey:
    Description: CPSUProxygenPrivateKey
    Value: !GetAtt CPSUProxygenPrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CPSUProxygenPrivateKey"]]

  CPSUProxygenPublicKey:
    Description: CPSUProxygenPublicKey
    Value: !GetAtt CPSUProxygenPublicKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CPSUProxygenPublicKey"]]

  ClinicalTrackerProxygenPrivateKey:
    Description: ClinicalTrackerProxygenPrivateKey
    Value: !GetAtt ClinicalTrackerProxygenPrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerProxygenPrivateKey"]]

  ClinicalTrackerProxygenPublicKey:
    Description: ClinicalTrackerProxygenPublicKey
    Value: !GetAtt ClinicalTrackerProxygenPublicKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerProxygenPublicKey"]]
  
  SlackWebHookUrl:
    Description: Slack webhook url
    Value: !GetAtt SlackWebHookUrl.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SlackWebHookUrl"]]
  
  AccessSlackSecretsManagedPolicy:
    Description: "Access SNS Secrets Policy ARN"
    Value: !GetAtt AccessSlackSecretsManagedPolicy.PolicyArn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AccessSlackSecretsManagedPolicy"]]
  #endregion
