AWSTemplateFormatVersion: "2010-09-09"
Resources:
  ##################################################
  # API Gateway
  ##################################################
  ApiGwCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole

  AllowApiGwLoggingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref ApiGwCloudWatchRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              - logs:GetLogEvents
              - logs:FilterLogEvents
              - logs:CreateLogDelivery
              - logs:PutResourcePolicy
              - logs:UpdateLogDelivery
              - logs:DeleteLogDelivery
              - logs:DescribeResourcePolicies
              - logs:GetLogDelivery
              - logs:ListLogDeliveries
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/*"

  ##################################################
  # Account
  ##################################################
  Account:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGwCloudWatchRole.Arn
    DependsOn: AllowApiGwLoggingPolicy

  ##################################################
  # Cloudwatch
  ##################################################
  CloudwatchResourcePolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: AWSLogDeliveryWrite20150319
      PolicyDocument: '{ "Version": "2012-10-17", "Statement": [ { "Sid": "AWSLogDeliveryWrite", "Effect": "Allow", "Principal": { "Service": "delivery.logs.amazonaws.com" }, "Action": [ "logs:CreateLogStream", "logs:PutLogEvents" ], "Resource": [ "*" ] } ] }'

  CloudwatchLogsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-policy-id
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Sid: Allow Service Logging
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnEquals:
                kms:EncryptionContext:aws:logs:arn:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda-insights*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/stepfunctions/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:artilleryio-log-group/artilleryio-cluster"
          - Sid: Allow API Gateway Role
            Effect: Allow
            Principal:
              AWS: !GetAtt ApiGwCloudWatchRole.Arn
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/*"

  CloudwatchLogsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/CloudwatchLogsKmsKeyAlias
      TargetKeyId: !Ref CloudwatchLogsKmsKey

  LambdaEncryptCloudwatchKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt CloudwatchLogsKmsKey.Arn

  CloudwatchEncryptionKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt CloudwatchLogsKmsKey.Arn

  ##################################################
  # Artifacts Bucket
  ##################################################
  ArtifactsBucketKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  ArtifactsBucketKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/ArtifactsBucketKMSKeyAlias
      TargetKeyId: !Ref ArtifactsBucketKMSKey

  UseArtifactBucketKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt ArtifactsBucketKMSKey.Arn

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: artifact/
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${ArtifactsBucketKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS:
                - !ImportValue ci-resources:CloudFormationDeployRole
                - !ImportValue ci-resources:CloudFormationExecutionRole
            Action:
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn

  ##################################################
  # Trust Store Bucket
  ##################################################
  TrustStoreBucketKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  TrustStoreBucketKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/TrustStoreBucketKMSKeyAlias
      TargetKeyId: !Ref TrustStoreBucketKMSKey

  UseTrustStoreBucketKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt TrustStoreBucketKMSKey.Arn

  TrustStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: truststore/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${TrustStoreBucketKMSKeyKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  TrustStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TrustStoreBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS:
                - !ImportValue ci-resources:CloudFormationDeployRole
                - !ImportValue ci-resources:CloudFormationExecutionRole
            Action:
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn

  ##################################################
  # Audit Logging Bucket
  ##################################################
  AuditLoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  AuditLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AuditLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/*"]]
              - !GetAtt AuditLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join [
                  "",
                  [
                    !GetAtt AuditLoggingBucket.Arn,
                    "/splunkDeliveryStreamBackup/*",
                  ],
                ]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt SplunkDeliveryStreamBackupBucket.Arn
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/artifact/*"]]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt ArtifactsBucket.Arn
          - Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject*
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/truststore/*"]]
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt TrustStoreBucket.Arn

  ##################################################
  # Splunk Delivery Stream Backup Bucket
  ##################################################
  SplunkDeliveryStreamBackupKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  SplunkDeliveryStreamBackupKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SplunkDeliveryStreamBackupKMSKeyAlias
      TargetKeyId: !Ref SplunkDeliveryStreamBackupKMSKey

  SplunkDeliveryStreamBackupBucketRoleKMSMangedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref SplunkDeliveryStreamBackupBucketRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupKMSKey.Arn

  SplunkDeliveryStreamBackupBucketRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole

  SplunkDeliveryStreamBackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: splunkDeliveryStreamBackup/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: false
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${SplunkDeliveryStreamBackupKMSKeyAlias}"

  SplunkDeliveryStreamBackupBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SplunkDeliveryStreamBackupBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - !Join ["", [!GetAtt SplunkDeliveryStreamBackupBucket.Arn, "/*"]]
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt SplunkDeliveryStreamBackupBucketRole.Arn
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
              - !Join # Access to bucket contents
                - ""
                - - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
                  - "/*"

  SplunkDeliveryStreamBackupBucketIAMManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref SplunkDeliveryStreamBackupBucketRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
              - !Join # Access to bucket contents
                - ""
                - - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
                  - "/*"

  ##################################################
  # Secrets KMS
  ##################################################
  SecretsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  SecretsKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SecretsKMSKeyAlias
      TargetKeyId: !Ref SecretsKMSKey

  UseSecretsKMSKeyManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !ImportValue ci-resources:CloudFormationExecutionRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt*
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt SecretsKMSKey.Arn

  LambdaDecryptSecretsKMSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !GetAtt SecretsKMSKey.Arn

  ##################################################
  # OLD CA Secrets - to delete after next prod deployment
  ##################################################
  CAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  CACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: CA certificate
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # OLD Client Secrets - to delete after next prod deployment
  ##################################################
  ClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # PfP CA Secrets
  ##################################################
  PfpCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP CA certificate
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # PfP Client Secrets
  ##################################################
  PfpClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PfpClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PfP Client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # Clinical Tracker CA Secrets
  ##################################################
  ClinicalTrackerCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker CA secret
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # Clinical Tracker Client Secrets
  ##################################################
  ClinicalTrackerClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClinicalTrackerClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Clinical tracker client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # PSU CA Secrets
  ##################################################
  PsuCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update CA secret
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # PSU Client Secrets
  ##################################################
  PsuClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  PsuClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Prescription status update client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # EPS FHIR Facade CA Secrets
  ##################################################
  FhirFacadeCAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeCACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade CA secret
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # EPS FHIR Facade Client Secrets
  ##################################################
  FhirFacadeClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  FhirFacadeClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: EPS FHIR facade client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # Spine Secrets
  ##################################################
  SpinePrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for spine mutual TLS
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePublicCertificate:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public certificate for spine mutual TLS
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpineASID:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: ASID for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePartyKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PartyKey for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpineCAChain:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: CA chain for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ##################################################
  # Other Secrets
  ##################################################
  ServiceSearchApiKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: API key for service search
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  JiraToken:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Jira token for creating release notes
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-jiraToken"

  ConfluenceToken:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Confluence token for creating release notes
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-confluenceToken"

  ProxgenPrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-ProxgenPrivateKey"

  ProxgenPublicKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public key for proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-ProxgenPublicKey"

  PSUProxygenPrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for psu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-PSU-ProxygenPrivateKey"

  PSUProxygenPublicKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public key for psu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-PSU-ProxygenPublicKey"

  CPSUProxygenPrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Private key for cpsu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-CPSU-ProxygenPrivateKey"

  CPSUProxygenPublicKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Public key for cpsu proxygen
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-CPSU-ProxygenPublicKey"

  LambdaAccessSecretsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref SpinePrivateKey
              - !Ref SpinePublicCertificate
              - !Ref SpineASID
              - !Ref SpinePartyKey
              - !Ref SpineCAChain
              - !Ref ServiceSearchApiKey

  SplunkHECToken:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Splunk HEC token
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe
      Name: !Sub "${AWS::StackName}-SplunkHECToken"

Outputs:
  ##################################################
  # Cloudwatch Outputs
  ##################################################
  CloudwatchLogsKmsKeyArn:
    Description: "The Arn of the API GW cloudwatch logs KMS Key"
    Value: !GetAtt CloudwatchLogsKmsKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudwatchLogsKmsKeyArn"]]

  LambdaEncryptCloudwatchKMSPolicy:
    Description: "Lambda Encrypt Cloudwatch KMS Policy ARN"
    Value: !GetAtt LambdaEncryptCloudwatchKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "LambdaEncryptCloudwatchKMSPolicy"]]

  CloudwatchEncryptionKMSPolicyArn:
    Description: "Cloudwatch Encryption KMS Policy ARN"
    Value: !GetAtt CloudwatchEncryptionKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "CloudwatchEncryptionKMSPolicyArn"]]

  ##################################################
  # Artifacts Bucket Outputs
  ##################################################
  ArtifactsBucket:
    Description: ARN of the Artifacts bucket
    Value: !GetAtt ArtifactsBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ArtifactsBucket"]]

  ##################################################
  # Trust Store Bucket Outputs
  ##################################################
  TrustStoreBucket:
    Description: ARN of the Truststore bucket
    Value: !GetAtt TrustStoreBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "TrustStoreBucket"]]

  ##################################################
  # Audit Logging Bucket Outputs
  ##################################################
  AuditLoggingBucket:
    Description: ARN of the audit logging bucket
    Value: !GetAtt AuditLoggingBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AuditLoggingBucket"]]

  ##################################################
  # Splunk Delivery Stream Backup Bucket Outputs
  ##################################################
  SplunkDeliveryStreamBackupKMSKey:
    Description: SplunkDeliveryStreamBackupKMSKey
    Value: !GetAtt SplunkDeliveryStreamBackupKMSKey.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupKMSKey"]]

  SplunkDeliveryStreamBackupBucketRole:
    Description: The splunk delivery stream role
    Value: !Ref SplunkDeliveryStreamBackupBucketRole
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucketRole"],
        ]

  SplunkDeliveryStreamBackupBucketRoleArn:
    Description: The splunk delivery stream role
    Value: !GetAtt SplunkDeliveryStreamBackupBucketRole.Arn
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucketRoleArn"],
        ]

  SplunkDeliveryStreamBackupBucket:
    Description: ARN of the splunk delivery stream backup bucket
    Value: !GetAtt SplunkDeliveryStreamBackupBucket.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucket"]]

  ##################################################
  # Secrets KMS Outputs
  ##################################################
  SecretsKMSKey:
    Description: SecretsKMSKey
    Value: !GetAtt SecretsKMSKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SecretsKMSKey"]]

  LambdaDecryptSecretsKMSPolicy:
    Description: "Lambda Decrypt Secrets KMS Policy ARN"
    Value: !GetAtt LambdaDecryptSecretsKMSPolicy.PolicyArn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "LambdaDecryptSecretsKMSPolicy"]]

  ##################################################
  # OLD CA Secrets Outputs - to delete after next prod deployment
  ##################################################
  CAKeySecret:
    Description: ARN of the CA key secret
    Value: !GetAtt CAKeySecret.Id

  CACertSecret:
    Description: ARN of the CA cert secret
    Value: !GetAtt CACertSecret.Id

  ##################################################
  # OLD Client Secrets Outputs - to delete after next prod deployment
  ##################################################
  ClientKeySecret:
    Description: ARN of the client key secret
    Value: !GetAtt ClientKeySecret.Id

  ClientCertSecret:
    Description: ARN of the client cert secret
    Value: !GetAtt ClientCertSecret.Id

  ClientSandboxKeySecret:
    Description: ARN of the client key secret for sandbox
    Value: !GetAtt ClientSandboxKeySecret.Id

  ClientSandboxCertSecret:
    Description: ARN of the client cert secret for sandbox
    Value: !GetAtt ClientSandboxCertSecret.Id

  ##################################################
  # PfP CA Secrets Outputs
  ##################################################
  PfpCAKeySecret:
    Description: ARN of the PfP CA key secret
    Value: !GetAtt PfpCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpCAKeySecret"]]

  PfpCACertSecret:
    Description: ARN of the PfP CA cert secret
    Value: !GetAtt PfpCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpCACertSecret"]]

  ##################################################
  # PfP Client Secrets Outputs
  ##################################################
  PfpClientKeySecret:
    Description: ARN of the PfP client key secret
    Value: !GetAtt PfpClientKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientKeySecret"]]

  PfpClientCertSecret:
    Description: ARN of the PfP client cert secret
    Value: !GetAtt PfpClientCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientCertSecret"]]

  PfpClientSandboxKeySecret:
    Description: ARN of the PfP client key secret for sandbox
    Value: !GetAtt PfpClientSandboxKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientSandboxKeySecret"]]

  PfpClientSandboxCertSecret:
    Description: ARN of the PfP client cert secret for sandbox
    Value: !GetAtt PfpClientSandboxCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PfpClientSandboxCertSecret"]]

  ##################################################
  # Clinical Tracker CA Secrets Outputs
  ##################################################
  ClinicalTrackerCAKeySecret:
    Description: ARN of the clinical tracker CA key secret
    Value: !GetAtt ClinicalTrackerCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerCAKeySecret"]]

  ClinicalTrackerCACertSecret:
    Description: ARN of the clinical tracker CA cert secret
    Value: !GetAtt ClinicalTrackerCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerCACertSecret"]]

  ##################################################
  # Clinical Tracker Client Secrets Outputs
  ##################################################
  ClinicalTrackerClientKeySecret:
    Description: ARN of the clinical tracker client key secret
    Value: !GetAtt ClinicalTrackerClientKeySecret.Id
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerClientKeySecret"]]

  ClinicalTrackerClientCertSecret:
    Description: ARN of the clinical tracker client cert secret
    Value: !GetAtt ClinicalTrackerClientCertSecret.Id
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "ClinicalTrackerClientCertSecret"]]

  ClinicalTrackerClientSandboxKeySecret:
    Description: ARN of the clinical tracker client key secret for sandbox
    Value: !GetAtt ClinicalTrackerClientSandboxKeySecret.Id
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "ClinicalTrackerClientSandboxKeySecret"],
        ]

  ClinicalTrackerClientSandboxCertSecret:
    Description: ARN of the clinical tracker client cert secret for sandbox
    Value: !GetAtt ClinicalTrackerClientSandboxCertSecret.Id
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "ClinicalTrackerClientSandboxCertSecret"],
        ]

  ##################################################
  # PSU CA Secrets Outputs
  ##################################################
  PsuCAKeySecret:
    Description: ARN of the prescription status update CA key secret
    Value: !GetAtt PsuCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuCAKeySecret"]]

  PsuCACertSecret:
    Description: ARN of the prescription status update CA cert secret
    Value: !GetAtt PsuCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuCACertSecret"]]

  ##################################################
  # PSU Client Secrets Outputs
  ##################################################
  PsuClientKeySecret:
    Description: ARN of the prescription status update client key secret
    Value: !GetAtt PsuClientKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientKeySecret"]]

  PsuClientCertSecret:
    Description: ARN of the prescription status update client cert secret
    Value: !GetAtt PsuClientCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientCertSecret"]]

  PsuClientSandboxKeySecret:
    Description: ARN of the prescription status update client key secret for sandbox
    Value: !GetAtt PsuClientSandboxKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientSandboxKeySecret"]]

  PsuClientSandboxCertSecret:
    Description: ARN of the prescription status update client cert secret for sandbox
    Value: !GetAtt PsuClientSandboxCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PsuClientSandboxCertSecret"]]

  ##################################################
  # EPS FHIR Facade CA Secrets Outputs
  ##################################################
  FhirFacadeCAKeySecret:
    Description: ARN of the EPS FHIR facade CA key secret
    Value: !GetAtt FhirFacadeCAKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeCAKeySecret"]]

  FhirFacadeCACertSecret:
    Description: ARN of the EPS FHIR facade CA cert secret
    Value: !GetAtt FhirFacadeCACertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeCACertSecret"]]

  ##################################################
  # EPS FHIR Facade Client Secrets Outputs
  ##################################################
  FhirFacadeClientKeySecret:
    Description: ARN of the EPS FHIR facade client key secret
    Value: !GetAtt FhirFacadeClientKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientKeySecret"]]

  FhirFacadeClientCertSecret:
    Description: ARN of the EPS FHIR facade client cert secret
    Value: !GetAtt FhirFacadeClientCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientCertSecret"]]

  FhirFacadeClientSandboxKeySecret:
    Description: ARN of the EPS FHIR facade client key secret for sandbox
    Value: !GetAtt FhirFacadeClientSandboxKeySecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientSandboxKeySecret"]]

  FhirFacadeClientSandboxCertSecret:
    Description: ARN of the EPS FHIR facade client cert secret for sandbox
    Value: !GetAtt FhirFacadeClientSandboxCertSecret.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "FhirFacadeClientSandboxCertSecret"]]

  ##################################################
  # Spine Secrets Outputs
  ##################################################
  SpinePrivateKey:
    Description: ARN of the private key for spine mutual TLS
    Value: !GetAtt SpinePrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePrivateKey"]]

  SpinePublicCertificate:
    Description: ARN of the public certificate for spine mutual TLS
    Value: !GetAtt SpinePublicCertificate.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePublicCertificate"]]

  SpineASID:
    Description: ASID for spine
    Value: !GetAtt SpineASID.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpineASID"]]

  SpinePartyKey:
    Description: PartyKey for spine
    Value: !GetAtt SpinePartyKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePartyKey"]]

  SpineCAChain:
    Description: SpineCAChain
    Value: !GetAtt SpineCAChain.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpineCAChain"]]

  ##################################################
  # Other Secrets Outputs
  ##################################################
  ServiceSearchApiKey:
    Description: ServiceSearchApiKey
    Value: !GetAtt ServiceSearchApiKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ServiceSearchApiKey"]]

  JiraToken:
    Description: JiraToken
    Value: !GetAtt JiraToken.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "JiraToken"]]

  ConfluenceToken:
    Description: ConfluenceToken
    Value: !GetAtt ConfluenceToken.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ConfluenceToken"]]

  LambdaAccessSecretsPolicy:
    Description: "Lambda Access Secrets Policy ARN"
    Value: !GetAtt LambdaAccessSecretsPolicy.PolicyArn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "LambdaAccessSecretsPolicy"]]

  SplunkHECToken:
    Description: SplunkHECToken
    Value: !GetAtt SplunkHECToken.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SplunkHECToken"]]

  ProxgenPrivateKey:
    Description: ProxgenPrivateKey
    Value: !GetAtt ProxgenPrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ProxgenPrivateKey"]]

  ProxgenPublicKey:
    Description: ProxgenPublicKey
    Value: !GetAtt ProxgenPublicKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ProxgenPublicKey"]]

  PSUProxygenPrivateKey:
    Description: PSUProxygenPrivateKey
    Value: !GetAtt PSUProxygenPrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PSUProxygenPrivateKey"]]

  PSUProxygenPublicKey:
    Description: PSUProxygenPublicKey
    Value: !GetAtt PSUProxygenPublicKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "PSUProxygenPublicKey"]]

  CPSUProxygenPrivateKey:
    Description: CPSUProxygenPrivateKey
    Value: !GetAtt CPSUProxygenPrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CPSUProxygenPrivateKey"]]

  CPSUProxygenPublicKey:
    Description: CPSUProxygenPublicKey
    Value: !GetAtt CPSUProxygenPublicKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CPSUProxygenPublicKey"]]
