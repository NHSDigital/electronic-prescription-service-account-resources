AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  DeploySubjectClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the deploy role.
    Default: ""
  CheckVersionSubjectClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the check version role.
    Default: ""
  ReleaseNotesExecuteLambdaClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the release notes execute lambda role.
    Default: ""
  PrepareChangesetClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the prepare changeset role.
    Default: ""
  ArtilleryLoadTestRoleClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the artillery load test role.
    Default: ""
  ProxygenPTLClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the proxygen PTL role.
    Default: ""
  ProxygenProdClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the proxygen prod role.
    Default: ""
  CDKPullImageClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the CDKPullImageRole
    Default: ""
  CDKPushImageClaimFilters:
    Type: CommaDelimitedList
    Description: >
      Subject claim filter for valid tokens for the CDKPushImageRole
    Default: ""
  EnableDeleteCNAME:
    Type: String
    Description: Whether to allow delete CNAME permissions
    Default: false
    AllowedValues: [true, false]

Conditions:
  ShouldCreateDeleteCNAMEpermissions: !Equals [true, !Ref EnableDeleteCNAME]

Resources:
  ##################################################
  # Identity Provider
  ##################################################
  GitHubIdentityProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
      ClientIdList:
        - sts.amazonaws.com

  AllowOpenIDProviderPermissionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
        - Ref: CloudFormationCheckVersionRole
        - Ref: ReleaseNotesExecuteLambdaRole
        - Ref: CloudFormationPrepareChangesetRole
        - Ref: ArtilleryRunnerRole
        - Ref: ProxygenPTLRole
        - Ref: ProxygenProdRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:GetOpenIDConnectProvider
            Resource: "*"

  ##################################################
  # Cloudformation Deployment Role
  ##################################################
  # see https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect
  # for details about subject claim filters that are used for each role
  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref DeploySubjectClaimFilters

  CreateCloudFormationStackPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:UpdateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:ListExports
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:DescribeStackEvents
              - cloudformation:GetTemplateSummary
              - cloudformation:ListStacks
              - cloudformation:DeleteChangeSet
            Resource: "*"

  AllowCloudFormationSecretsAccessManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !ImportValue account-resources:PsuClientKeySecret
              - !ImportValue account-resources:PsuClientSandboxKeySecret
              - !ImportValue account-resources:PsuCACertSecret
              - !ImportValue account-resources:PsuCAKeySecret
              - !ImportValue account-resources:PsuClientCertSecret
              - !ImportValue account-resources:PsuClientSandboxCertSecret
              - !ImportValue account-resources:PSUProxygenPrivateKey
              - !ImportValue account-resources:PSUProxygenPublicKey
              - !ImportValue account-resources:CPSUProxygenPrivateKey
              - !ImportValue account-resources:CPSUProxygenPublicKey
              - !ImportValue account-resources:ClinicalTrackerClientKeySecret
              - !ImportValue account-resources:ClinicalTrackerClientSandboxKeySecret
              - !ImportValue account-resources:ClinicalTrackerCACertSecret
              - !ImportValue account-resources:ClinicalTrackerCAKeySecret
              - !ImportValue account-resources:ClinicalTrackerClientCertSecret
              - !ImportValue account-resources:ClinicalTrackerClientSandboxCertSecret
              - !ImportValue account-resources:ClinicalTrackerProxygenPrivateKey
              - !ImportValue account-resources:ClinicalTrackerProxygenPublicKey
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !Sub "arn:aws:kms:eu-west-2:${AWS::AccountId}:key/*"
              - !Sub "arn:aws:kms:us-east-1:${AWS::AccountId}:key/*"

  ECRPushImagePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ecr:DescribeImages
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:ListTagsForResource
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:TagResource
              - ecr:UntagResource
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:BatchCheckLayerAvailability
              - ecr:DescribeImageScanFindings
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"

  RemoveOldCNAMERecordsPolicy:
    Condition: ShouldCreateDeleteCNAMEpermissions
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - route53:ChangeResourceRecordSets
              - route53:ListHostedZonesByName
              - route53:ListResourceRecordSets
            Resource: "*"

  ##################################################
  # Cloudformation Execution Role
  ##################################################
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole

  AssumeExecutionRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
        - Ref: CloudFormationPrepareChangesetRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !GetAtt CloudFormationExecutionRole.Arn

  AssumeCDKRolesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationDeployRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: 
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-us-east-1
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-eu-west-2
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-${AWS::AccountId}-us-east-1
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-${AWS::AccountId}-eu-west-2
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-us-east-1
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-eu-west-2

  # Handy reference for AWS permissions:
  # https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html
  #
  # to see what failed you can use this cloudwatch query against the NHSDAudit_trail_log_group
  #
  # fields @timestamp, @message, @logStream, @log
  # | filter @message  like 'ci-resources-CloudFormationExecutionRole'
  # | filter @message like 'AccessDenied'
  # | sort @timestamp desc
  # | limit 1000
  # | fields eventSource, eventName
  # | display eventSource, eventName
  # | dedup eventSource, eventName
  #

  # there are multiple policies to prevent each one becoming too large

  # iam permissions are restricted to just act on this account so are in a separate policy
  GrantCloudFormationExecutionAccessIAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:AddClientIDToOpenIDConnectProvider
              - iam:Attach*
              - iam:Create*
              - iam:Delete*
              - iam:Detach*
              - iam:Get*
              - iam:List*
              - iam:Put*
              - iam:Remove*
              - iam:Tag*
              - iam:Untag*
              - iam:Update*
              - iam:PassRole
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:*"

  GrantCloudFormationExecutionAccessPolicyA:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:CreateChangeSet
              - logs:AssociateKmsKey
              - logs:DisassociateKmsKey
              - logs:CreateLogGroup
              - logs:DeleteLogGroup
              - logs:TagLogGroup
              - logs:CreateLogStream
              - logs:DeleteLogStream
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
              - logs:PutSubscriptionFilter
              - logs:DescribeSubscriptionFilters
              - logs:DeleteSubscriptionFilter
              - logs:DescribeLogGroups
              - logs:CreateLogDelivery
              - logs:DeleteLogDelivery
              - logs:ListLogDeliveries
              - logs:GetLogDelivery
              - logs:UpdateLogDelivery
              - logs:ListTagsLogGroup
              - logs:UntagLogGroup
              - logs:ListTagsForResource
              - logs:TagResource
              - logs:DescribeLogStreams
              - logs:DescribeResourcePolicies
              - logs:DeleteMetricFilter
              - logs:DescribeMetricFilters
              - logs:FilterLogEvents
              - logs:PutMetricFilter
              - lambda:Add*
              - lambda:Create*
              - lambda:Delete*
              - lambda:Get*
              - lambda:List*
              - lambda:Publish*
              - lambda:Put*
              - lambda:Remove*
              - lambda:Tag*
              - lambda:Untag*
              - lambda:Update*
              - kms:GenerateDataKey*
              - kms:Create*
              - kms:Delete*
              - kms:Describe*
              - kms:EnableKeyRotation
              - kms:Get*
              - kms:List*
              - kms:Put*
              - kms:ScheduleKeyDeletion*
              - kms:Tag*
              - kms:Untag*
              - kms:Update*
              - kms:Decrypt*
              - apigateway:DELETE
              - apigateway:GET
              - apigateway:POST
              - apigateway:PATCH
              - apigateway:PUT
              - apigateway:AddCertificateToDomain
              - apigateway:RemoveCertificateFromDomain
              - apigateway:UpdateRestApiPolicy
              - apigateway:TagResource
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:SetSecurityGroups
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DeleteRule
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:ModifyRule
              - elasticloadbalancing:CreateTrustStore
              - elasticloadbalancing:DescribeTrustStores
              - elasticloadbalancing:DeleteTrustStore
              - elasticloadbalancing:ModifyTrustStore
              - elasticloadbalancing:GetTrustStoreCaCertificatesBundle
              - elasticloadbalancing:AddTrustStoreRevocations
              - elasticloadbalancing:RemoveTrustStoreRevocations
              - elasticloadbalancing:DescribeTrustStoreAssociations
              - elasticloadbalancing:DeleteSharedTrustStoreAssociation
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:RemoveTags
              - elasticloadbalancing:DescribeListenerAttributes
              - elasticloadbalancing:DescribeListenerCertificates
              - elasticloadbalancing:GetResourcePolicy
              - elasticloadbalancing:AddListenerCertificates
              - elasticloadbalancing:ModifyListenerAttributes
              - elasticloadbalancing:RemoveListenerCertificates
              - ecs:RegisterTaskDefinition
              - ecs:DeregisterTaskDefinition
              - ecs:UpdateService
              - ecs:DescribeServices
              - ecs:CreateService
              - ecs:DeleteService
              - ecs:RunTask
              - ecs:StopTask
              - ecs:DescribeTasks
              - ecs:ListTasks
              - ecs:ListServices
              - ecs:DescribeTaskDefinition
            Resource: "*"

  GrantCloudFormationExecutionAccessPolicyB:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:PutBucketAcl
              - s3:PutEncryptionConfiguration
              - s3:PutBucketVersioning
              - s3:GetBucketTagging
              - s3:PutBucketTagging
              - s3:GetBucketPolicy
              - s3:PutBucketPolicy
              - s3:PutBucketLogging
              - s3:DeleteBucketPolicy
              - s3:PutBucketPublicAccessBlock
              - s3:GetReplicationConfiguration
              - s3:GetBucketOwnershipControls
              - s3:GetBucketPublicAccessBlock
              - s3:GetEncryptionConfiguration
              - s3:GetAccelerateConfiguration
              - s3:GetAnalyticsConfiguration
              - s3:GetLifecycleConfiguration
              - s3:GetMetricsConfiguration
              - s3:GetInventoryConfiguration
              - s3:GetIntelligentTieringConfiguration
              - s3:GetBucketCors
              - s3:GetBucketLogging
              - s3:GetBucketNotification
              - s3:GetBucketObjectLockConfiguration
              - s3:GetBucketVersioning
              - s3:GetBucketWebsite
              - s3:PutBucketOwnershipControls
              - firehose:CreateDeliveryStream
              - firehose:DescribeDeliveryStream
              - firehose:DeleteDeliveryStream
              - firehose:UpdateDestination
              - firehose:ListTagsForDeliveryStream
              - firehose:TagDeliveryStream
              - firehose:UntagDeliveryStream
              - acm:AddTagsToCertificate
              - acm:DeleteCertificate
              - acm:DescribeCertificate
              - acm:GetCertificate
              - acm:ListCertificates
              - acm:ListTagsForCertificate
              - acm:RemoveTagsFromCertificate
              - acm:RenewCertificate
              - acm:RequestCertificate
              - route53:ChangeResourceRecordSets
              - route53:GetHostedZone
              - route53:ListResourceRecordSets
              - route53:GetChange
              - route53:ListHostedZones
              - route53:CreateHostedZone
              - route53:DeleteHostedZone
              - secretsmanager:Create*
              - secretsmanager:Update*
              - secretsmanager:Delete*
              - secretsmanager:Describe*
              - secretsmanager:List*
              - secretsmanager:Tag*
              - secretsmanager:Untag*
              - secretsmanager:GetSecretValue
              - scheduler:GetSchedule
              - scheduler:CreateSchedule
              - scheduler:DeleteSchedule
              - scheduler:ListSchedules
              - scheduler:TagResource
              - scheduler:UntagResource
              - scheduler:UpdateSchedule
              - scheduler:ListTagsForResource
              - sns:CreateTopic
              - sns:DeleteTopic
              - sns:ListTopics
              - sns:AddPermission
              - sns:RemovePermission
              - sns:GetSubscriptionAttributes
              - sns:GetTopicAttributes
              - sns:ListSubscriptions
              - sns:ListSubscriptionsByTopic
              - sns:ListTagsForResource
              - sns:SetSubscriptionAttributes
              - sns:SetTopicAttributes
              - sns:Subscribe
              - sns:Unsubscribe
              - sns:TagResource
              - sns:UntagResource
              - SNS:GetDataProtectionPolicy
              - sqs:AddPermission
              - sqs:RemovePermission
              - sqs:CreateQueue
              - sqs:DeleteQueue
              - sqs:ListQueues
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ListDeadLetterSourceQueues
              - sqs:ListQueueTags
              - sqs:TagQueue
              - sqs:UntagQueue
              - sqs:SetQueueAttributes
            Resource: "*"

  GrantCloudFormationExecutionAccessPolicyC:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:CreateTable
              - dynamodb:DeleteTable
              - dynamodb:DescribeTable
              - dynamodb:UpdateTable
              - dynamodb:UpdateContinuousBackups
              - dynamodb:TagResource
              - dynamodb:UntagResource
              - dynamodb:ListTables
              - dynamodb:ListTagsOfResource
              - dynamodb:GetResourcePolicy
              - dynamodb:DescribeContributorInsights
              - dynamodb:DescribeContinuousBackups
              - dynamodb:DescribeKinesisStreamingDestination
              - dynamodb:DescribeTimeToLive
              - dynamodb:UpdateTimeToLive
              - application-autoscaling:PutScalingPolicy
              - application-autoscaling:DeleteScalingPolicy
              - application-autoscaling:DescribeScalingPolicies
              - application-autoscaling:DescribeScalableTargets
              - application-autoscaling:RegisterScalableTarget
              - application-autoscaling:DeregisterScalableTarget
              - application-autoscaling:TagResource
              - application-autoscaling:UntagResource
              - application-autoscaling:ListTagsForResource
              - application-autoscaling:DescribeScheduledActions
              - states:CreateActivity
              - states:CreateStateMachine
              - states:CreateStateMachineAlias
              - states:DeleteActivity
              - states:DeleteStateMachine
              - states:DeleteStateMachineAlias
              - states:DeleteStateMachineVersion
              - states:DescribeActivity
              - states:DescribeExecution
              - states:DescribeMapRun
              - states:DescribeStateMachine
              - states:DescribeStateMachineAlias
              - states:DescribeStateMachineForExecution
              - states:ListActivities
              - states:ListStateMachineAliases
              - states:ListStateMachineVersions
              - states:ListStateMachines
              - states:ListTagsForResource
              - states:PublishStateMachineVersion
              - states:TagResource
              - states:UntagResource
              - states:UpdateMapRun
              - states:UpdateStateMachine
              - states:UpdateStateMachineAlias
              - ssm:GetParameters
              - ssm:PutParameter
              - ssm:DeleteParameter
              - ssm:AddTagsToResource
              - ssm:DescribeParameters
              - ssm:ListTagsForResource
              - ssm:RemoveTagsFromResource
              - cloudwatch:DescribeAlarms
              - cloudwatch:DescribeAlarmsForMetric
              - cloudwatch:EnableAlarmActions
              - cloudwatch:DisableAlarmActions
              - cloudwatch:ListMetrics
              - cloudwatch:PutMetricAlarm
              - cloudwatch:PutCompositeAlarm
              - cloudwatch:DeleteAlarms
              - cloudwatch:TagResource
              - cloudwatch:UntagResource
              - cloudwatch:DescribeDashboards
              - cloudwatch:GetDashboard
              - cloudwatch:PutDashboard
              - cloudwatch:DeleteDashboards
              - ecr:CreateRepository
              - ecr:DeleteRepository
              - ecr:DeleteRegistryPolicy
              - ecr:DeleteRepositoryPolicy
              - ecr:DescribeImages
              - ecr:DescribeRegistry
              - ecr:DescribeRepositories
              - ecr:GetRegistryPolicy
              - ecr:GetRegistryScanningConfiguration
              - ecr:GetRepositoryPolicy
              - ecr:ListImages
              - ecr:ListTagsForResource
              - ecr:PutImageScanningConfiguration
              - ecr:PutRegistryPolicy
              - ecr:PutRegistryScanningConfiguration
              - ecr:SetRepositoryPolicy
              - ecr:TagResource
              - ecr:UntagResource
              - ecr:GetLifecyclePolicy
              - ecr:DeleteLifecyclePolicy
              - ecr:PutLifecyclePolicy
            Resource: "*"

  GrantCloudFormationExecutionAccessPolicyD:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-identity:CreateIdentityPool
          - cognito-idp:ListIdentityProviders
          - cognito-idp:DisassociateWebACL
          - cognito-idp:GetLogDeliveryConfiguration
          - cognito-identity:GetPrincipalTagAttributeMap
          - cognito-idp:DeleteUserPoolDomain
          - cognito-idp:CreateIdentityProvider
          - cognito-idp:DescribeUserPool
          - cognito-identity:UntagResource
          - cognito-idp:ListResourceServers
          - cognito-idp:UntagResource
          - cognito-identity:UpdateIdentityPool
          - cognito-idp:GetWebACLForResource
          - cognito-identity:TagResource
          - cognito-idp:TagResource
          - cognito-idp:GetSigningCertificate
          - cognito-idp:UpdateResourceServer
          - cognito-idp:DeleteResourceServer
          - cognito-idp:DeleteUserPoolClient
          - cognito-idp:UpdateUserPoolClient
          - cognito-idp:GetGroup
          - cognito-idp:ListUserPools
          - cognito-idp:CreateResourceServer
          - cognito-idp:CreateUserPoolClient
          - cognito-identity:DeleteIdentityPool
          - cognito-idp:UpdateUserPoolDomain
          - cognito-idp:DeleteUserPool
          - cognito-idp:AddCustomAttributes
          - cognito-identity:ListIdentityPools
          - cognito-idp:CreateGroup
          - cognito-idp:CreateUserPool
          - cognito-idp:UpdateIdentityProvider
          - cognito-identity:GetIdentityPoolRoles
          - cognito-idp:ListUserPoolClients
          - cognito-identity:GetId
          - cognito-identity:SetPrincipalTagAttributeMap
          - cognito-idp:CreateUserPoolDomain
          - cognito-idp:DescribeIdentityProvider
          - cognito-identity:SetIdentityPoolRoles
          - cognito-idp:DescribeResourceServer
          - cognito-idp:DescribeUserPoolClient
          - cognito-identity:DescribeIdentityPool
          - cognito-idp:DeleteIdentityProvider
          - cognito-idp:ListTagsForResource
          - cognito-idp:DescribeUserPoolDomain
          - cognito-identity:ListTagsForResource
          - cognito-idp:AssociateWebACL
          - cognito-idp:UpdateUserPool
          - cognito-identity:GetCredentialsForIdentity
          - cloudfront:AssociateAlias
          - cloudfront:CreateCachePolicy
          - cloudfront:CreateCloudFrontOriginAccessIdentity
          - cloudfront:CreateDistribution
          - cloudfront:CreateFunction
          - cloudfront:CreateInvalidation
          - cloudfront:CreateKeyValueStore
          - cloudfront:CreateMonitoringSubscription
          - cloudfront:CreateOriginAccessControl
          - cloudfront:CreateOriginRequestPolicy
          - cloudfront:CreateRealtimeLogConfig
          - cloudfront:CreateResponseHeadersPolicy
          - cloudfront:DeleteCachePolicy
          - cloudfront:DeleteFunction
          - cloudfront:DeleteKeyValueStore
          - cloudfront:DeleteMonitoringSubscription
          - cloudfront:DeleteOriginAccessControl
          - cloudfront:DeleteOriginRequestPolicy
          - cloudfront:DeleteRealtimeLogConfig
          - cloudfront:DeleteResponseHeadersPolicy
          - cloudfront:DescribeFunction
          - cloudfront:DescribeKeyValueStore
          - cloudfront:GetCachePolicy
          - cloudfront:GetCachePolicyConfig
          - cloudfront:GetCloudFrontOriginAccessIdentity
          - cloudfront:GetCloudFrontOriginAccessIdentityConfig
          - cloudfront:GetDistribution
          - cloudfront:GetDistributionConfig
          - cloudfront:GetFunction
          - cloudfront:GetInvalidation
          - cloudfront:GetMonitoringSubscription
          - cloudfront:GetOriginAccessControl
          - cloudfront:GetOriginAccessControlConfig
          - cloudfront:GetOriginRequestPolicy
          - cloudfront:GetOriginRequestPolicyConfig
          - cloudfront:GetRealtimeLogConfig
          - cloudfront:GetResponseHeadersPolicy
          - cloudfront:GetResponseHeadersPolicyConfig
          - cloudfront:ListCachePolicies
          - cloudfront:ListCloudFrontOriginAccessIdentities
          - cloudfront:ListDistributions
          - cloudfront:ListDistributionsByCachePolicyId
          - cloudfront:ListDistributionsByOriginRequestPolicyId
          - cloudfront:ListDistributionsByRealtimeLogConfig
          - cloudfront:ListDistributionsByResponseHeadersPolicyId
          - cloudfront:ListFunctions
          - cloudfront:ListInvalidations
          - cloudfront:ListKeyValueStores
          - cloudfront:ListOriginAccessControls
          - cloudfront:ListOriginRequestPolicies
          - cloudfront:ListRealtimeLogsConfig
          - cloudfront:ListResponseHeadersPolicies
          - cloudfront:PublishFunction
          - cloudfront:TagResource
          - cloudfront:TestFunction
          - cloudfront:UntagResource
          - cloudfront:UpdateCachePolicy
          - cloudfront:UpdateCloudFrontOriginAccessIdentity
          - cloudfront:UpdateDistribution
          - cloudfront:UpdateFunction
          - cloudfront:UpdateKeyValueStore
          - cloudfront:UpdateOriginAccessControl
          - cloudfront:UpdateOriginRequestPolicy
          - cloudfront:UpdateRealtimeLogConfig
          - cloudfront:UpdateResponseHeadersPolicy
          - cloudfront:ListTagsForResource
          - cloudfront:DeleteDistribution
          Resource: "*"
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          - s3:PutObject*
          - s3:GetBucket*
          - s3:GetObject*
          Resource:
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2/*
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1/*
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1
          - !Sub arn:aws:lambda:*:${AWS::AccountId}:function:*CustomCrossRegionExport*
          - !Sub arn:aws:lambda:*:${AWS::AccountId}:function:*CustomS3AutoDeleteObject*
        - Effect: Allow
          Action: s3:List*
          Resource:
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2/*
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1/*
          - !Sub arn:aws:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1

  GrantCloudFormationExecutionEc2AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ec2:CreateVpc
              - ec2:DeleteVpc
              - ec2:DescribeVpcs
              - ec2:ModifyVpcAttribute
              - ec2:DescribeVpcAttribute
              - ec2:AssociateVpcCidrBlock
              - ec2:DisassociateVpcCidrBlock
              - ec2:CreateVpcEndpoint
              - ec2:DeleteVpcEndpoints
              - ec2:ModifyVpcEndpoint
              - ec2:DescribeVpcEndpoints
              - ec2:CreateTags
              - ec2:DeleteTags
              - ec2:DescribeTags
              - ec2:CreateSubnet
              - ec2:DeleteSubnet
              - ec2:DescribeSubnets
              - ec2:ModifySubnetAttribute
              - ec2:AssociateSubnetCidrBlock
              - ec2:DisassociateSubnetCidrBlock
              - ec2:CreateSecurityGroup
              - ec2:DeleteSecurityGroup
              - ec2:DescribeSecurityGroups
              - ec2:DescribeStaleSecurityGroups
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:DescribeSecurityGroupReferences
              - ec2:ModifySecurityGroupRules
              - ec2:DescribeSecurityGroupRules
              - ec2:GetSecurityGroupsForVpc
              - ec2:CreateRouteTable
              - ec2:DeleteRouteTable
              - ec2:DescribeRouteTables
              - ec2:AssociateRouteTable
              - ec2:DisassociateRouteTable
              - ec2:ReplaceRouteTableAssociation
              - ec2:CreateRoute
              - ec2:DeleteRoute
              - ec2:ReplaceRoute
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:AttachNetworkInterface
              - ec2:DetachNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ResetNetworkInterfaceAttribute
              - ec2:DescribeNetworkInterfaceAttribute
              - ec2:CreateNatGateway
              - ec2:DeleteNatGateway
              - ec2:DescribeNatGateways
              - ec2:AssociateNatGatewayAddress
              - ec2:DisassociateNatGatewayAddress
              - ec2:CreateInternetGateway
              - ec2:DeleteInternetGateway
              - ec2:AttachInternetGateway
              - ec2:DetachInternetGateway
              - ec2:DescribeInternetGateways
              - ec2:CreateEgressOnlyInternetGateway
              - ec2:DeleteEgressOnlyInternetGateway
              - ec2:DescribeEgressOnlyInternetGateways
              - ec2:AssignIpv6Address
              - ec2:UnassignIpv6Address
              - ec2:AllocateAddress
              - ec2:AssociateAddress
              - ec2:DisassociateAddress
              - ec2:ReleaseAddress
              - ec2:DescribeAddresses
              - ec2:ModifyAddressAttribute
              - ec2:ResetAddressAttribute
              - ec2:DescribeAddressesAttribute
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeRegions
              - ec2:CreateFlowLogs
              - ec2:DeleteFlowLogs
              - ec2:DescribeFlowLogs
              - ec2:CreateNetworkAcl
              - ec2:DescribeNetworkAcls
              - ec2:DeleteNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:DeleteNetworkAclEntry
              - ec2:ReplaceNetworkAclEntry
              - ec2:DescribeAccountAttributes
              - ec2:ReplaceNetworkAclAssociation
              - ecs:DescribeClusters
              - ecs:CreateCluster
              - ecs:TagResource
              - ecs:UntagResource
              - ecs:ListTagsForResource
              - ecs:DeleteCluster
            Resource: "*"

  ##################################################
  # Cloudformation Check Version Role
  ##################################################
  CloudFormationCheckVersionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref CheckVersionSubjectClaimFilters

  DescribeCloudFormationStackPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationCheckVersionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:DescribeStacks
              - cloudformation:ListExports
              - cloudformation:ListStacks
            Resource: "*"

  ##################################################
  # Cloudformation Prepare Changeset Role
  ##################################################
  CloudFormationPrepareChangesetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref PrepareChangesetClaimFilters

  CreateCloudFormationStackChangeSetPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CloudFormationPrepareChangesetRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:DescribeStacks
              - cloudformation:ListExports
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStackEvents
              - cloudformation:GetTemplateSummary
              - cloudformation:ListStacks
              - cloudformation:DeleteChangeSet
            Resource: "*"

  ##################################################
  # Release Notes Role
  ##################################################
  ReleaseNotesExecuteLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref ReleaseNotesExecuteLambdaClaimFilters

  ##################################################
  # Artillery.io runner Role
  ##################################################
  ArtilleryRunnerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref ArtilleryLoadTestRoleClaimFilters

  ArtilleryRunnerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: ArtilleryRunnerRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "iam:PassRole"
              - "iam:GetRole"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/artilleryio-ecs-worker-role"
          - Sid: "SQSPermissions"
            Effect: "Allow"
            Action:
              - "sqs:*"
            Resource: !Sub "arn:aws:sqs:*:${AWS::AccountId}:artilleryio*"
          - Sid: "SQSListQueues"
            Effect: "Allow"
            Action:
              - "sqs:ListQueues"
            Resource: "*"
          - Sid: "ECSPermissionsGeneral"
            Effect: "Allow"
            Action:
              - "ecs:ListClusters"
              - "ecs:RegisterTaskDefinition"
              - "ecs:DeregisterTaskDefinition"
              - "ecs:DescribeTaskDefinition"
            Resource: "*"
          - Sid: "ECSPermissionsScopedToCluster"
            Effect: "Allow"
            Action:
              - "ecs:DescribeClusters"
              - "ecs:ListContainerInstances"
            Resource: !Sub "arn:aws:ecs:*:${AWS::AccountId}:cluster/*"
          - Sid: "ECSPermissionsScopedWithCondition"
            Effect: "Allow"
            Action:
              - "ecs:SubmitTaskStateChange"
              - "ecs:DescribeTasks"
              - "ecs:ListTasks"
              - "ecs:ListTaskDefinitions"
              - "ecs:DescribeTaskDefinition"
              - "ecs:StartTask"
              - "ecs:StopTask"
              - "ecs:RunTask"
            Condition:
              ArnEquals:
                ecs:cluster: !Sub "arn:aws:ecs:*:${AWS::AccountId}:cluster/*"
            Resource: "*"
          - Sid: "S3Permissions"
            Effect: "Allow"
            Action:
              - "s3:DeleteObject"
              - "s3:GetObject"
              - "s3:GetObjectAcl"
              - "s3:GetObjectTagging"
              - "s3:GetObjectVersion"
              - "s3:PutObject"
              - "s3:PutObjectAcl"
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
              - "s3:GetBucketLogging"
              - "s3:GetBucketPolicy"
              - "s3:GetBucketTagging"
              - "s3:PutBucketPolicy"
              - "s3:PutBucketTagging"
              - "s3:PutMetricsConfiguration"
              - "s3:GetLifecycleConfiguration"
              - "s3:PutLifecycleConfiguration"
            Resource:
              - !Sub "arn:aws:s3:::artilleryio-test-data-${AWS::AccountId}"
              - !Sub "arn:aws:s3:::artilleryio-test-data-${AWS::AccountId}/*"
          - Effect: "Allow"
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Sub "arn:aws:secretsmanager:*:${AWS::AccountId}:secret:artilleryio/*"
          - Effect: "Allow"
            Action:
              - "ssm:PutParameter"
              - "ssm:GetParameter"
              - "ssm:GetParameters"
              - "ssm:DeleteParameter"
              - "ssm:DescribeParameters"
              - "ssm:GetParametersByPath"
            Resource:
              - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/artilleryio/*"
          - Effect: "Allow"
            Action:
              - "ec2:DescribeRouteTables"
              - "ec2:DescribeVpcs"
              - "ec2:DescribeSubnets"
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - cloudformation:ListExports
            Resource: "*"
          - Effect: Allow
            Action:
              - logs:PutRetentionPolicy
            Resource:
              - !Sub "arn:aws:logs:eu-west-2:${AWS::AccountId}:log-group:artilleryio-log-group/*"

  ##################################################
  # Proxygen roles
  ##################################################
  ProxygenPTLRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref ProxygenPTLClaimFilters

  ProxygenProdRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref ProxygenProdClaimFilters

  ProxygenAccessExportPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: ProxygenPTLRole
        - Ref: ProxygenProdRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:ListExports
            Resource: "*"

  ##################################################
  # CDK Util roles
  ##################################################
  CDKPullImageRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref CDKPullImageClaimFilters

  CDKPullImageRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CDKPullImageRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:DescribeImages
              - ecr:GetDownloadUrlForLayer
              - ecr:ListImages
              - ecr:ListTagsForResource
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/cdk-utils-build-repo"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"

  CDKPushImageRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub: !Ref CDKPushImageClaimFilters

  CDKPushImageRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: CDKPushImageRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ecr:DescribeImages
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:ListTagsForResource
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:TagResource
              - ecr:UntagResource
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:BatchCheckLayerAvailability
              - ecr:DescribeImageScanFindings
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/cdk-utils-build-repo"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"
Outputs:
  ##################################################
  # Cloudformation Deployment Role Outputs
  ##################################################
  CloudFormationDeployRole:
    Description: ARN of the IAM Role(CloudFormationDeployRole)
    Value: !GetAtt CloudFormationDeployRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudFormationDeployRole"]]

  CloudFormationDeployRoleName:
    Description: Name of the IAM Role(CloudFormationDeployRole)
    Value: !Ref CloudFormationDeployRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudFormationDeployRoleName"]]

  ##################################################
  # Cloudformation Execution Role Outputs
  ##################################################
  CloudFormationExecutionRole:
    Description: ARN of the IAM Role(CloudFormationExecutionRole)
    Value: !GetAtt CloudFormationExecutionRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudFormationExecutionRole"]]

  CloudFormationExecutionRoleName:
    Description: Name of the IAM Role(CloudFormationExecutionRole)
    Value: !Ref CloudFormationExecutionRole
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "CloudFormationExecutionRoleName"]]

  ##################################################
  # Cloudformation Check Version Role Outputs
  ##################################################
  CloudFormationCheckVersionRole:
    Description: ARN of the IAM Role(CloudFormationCheckVersionRole)
    Value: !GetAtt CloudFormationCheckVersionRole.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "CloudFormationCheckVersionRole"]]

  CloudFormationCheckVersionRoleName:
    Description: Name of the IAM Role(CloudFormationCheckVersionRole)
    Value: !Ref CloudFormationCheckVersionRole
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "CloudFormationCheckVersionRoleName"],
        ]

  ##################################################
  # Cloudformation Prepare Changeset Role Outputs
  ##################################################
  CloudFormationPrepareChangesetRole:
    Description: ARN of the IAM Role(CloudFormationPrepareChangesetRole)
    Value: !GetAtt CloudFormationPrepareChangesetRole.Arn
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "CloudFormationPrepareChangesetRole"],
        ]

  CloudFormationPrepareChangesetName:
    Description: Name of the IAM Role(CloudFormationPrepareChangesetRole)
    Value: !Ref CloudFormationPrepareChangesetRole
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "CloudFormationPrepareChangesetRoleName"],
        ]
  ##################################################
  # Release Notes Role Outputs
  ##################################################
  ReleaseNotesExecuteLambdaRole:
    Description: ARN of the IAM Role(ReleaseNotesExecuteLambdaRole)
    Value: !GetAtt ReleaseNotesExecuteLambdaRole.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "ReleaseNotesExecuteLambdaRole"]]
  ReleaseNotesExecuteLambdaName:
    Description: Name of the IAM Role(ReleaseNotesExecuteLambda)
    Value: !Ref ReleaseNotesExecuteLambdaRole
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "ReleaseNotesExecuteLambdaRoleName"],
        ]
  ##################################################
  # Artillery Runner Role Outputs
  ##################################################
  ArtilleryRunnerRole:
    Description: ARN of the IAM Role(ArtilleryRunnerRole)
    Value: !GetAtt ArtilleryRunnerRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ArtilleryRunnerRole"]]
  ArtilleryRunnerRoleName:
    Description: Name of the IAM Role(ArtilleryRunnerRole)
    Value: !Ref ArtilleryRunnerRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ArtilleryRunnerRoleName"]]
  ##################################################
  # Proxygen Roles Outputs
  ##################################################
  ProxygenPTLRole:
    Description: ARN of the IAM Role(ProxygenPTLRole)
    Value: !GetAtt ProxygenPTLRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ProxygenPTLRole"]]
  ProxygenPTLRoleName:
    Description: Name of the IAM Role(ProxygenPTLRole)
    Value: !Ref ProxygenPTLRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ProxygenPTLRoleName"]]
  ProxygenProdRole:
    Description: ARN of the IAM Role(ProxygenProdRole)
    Value: !GetAtt ProxygenProdRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ProxygenProdRole"]]
  ProxygenProdRoleName:
    Description: Name of the IAM Role(ProxygenProdRole)
    Value: !Ref ProxygenProdRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ProxygenProdRoleName"]]
  ##################################################
  # CDK Utils Role Outputs
  ##################################################
  CDKPullImageRole:
    Description: ARN of the IAM Role(CDKPullImageRole)
    Value: !GetAtt CDKPullImageRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CDKPullImageRole"]]
  CDKPullImageRoleName:
    Description: Name of the IAM Role(CDKPullImageRole)
    Value: !Ref CDKPullImageRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CDKPullImageRoleName"]]
  CDKPushImageRole:
    Description: ARN of the IAM Role(CDKPushImageRole)
    Value: !GetAtt CDKPushImageRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CDKPushImageRole"]]
  CDKPushImageRoleName:
    Description: Name of the IAM Role(CDKPushImageRole)
    Value: !Ref CDKPushImageRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CDKPushImageRoleName"]]
  ##################################################
  # Managed policy Outputs
  ##################################################
  GrantCloudFormationExecutionAccessIAMPolicy:
    Description: ARN of the IAM policy GrantCloudFormationExecutionAccessIAMPolicy
    Value: !Ref GrantCloudFormationExecutionAccessIAMPolicy
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "GrantCloudFormationExecutionAccessIAMPolicy"]]
  GrantCloudFormationExecutionAccessPolicyA:
    Description: ARN of the IAM policy GrantCloudFormationExecutionAccessPolicyA
    Value: !Ref GrantCloudFormationExecutionAccessPolicyA
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "GrantCloudFormationExecutionAccessPolicyA"]]
  GrantCloudFormationExecutionAccessPolicyB:
    Description: ARN of the IAM policy GrantCloudFormationExecutionAccessPolicyB
    Value: !Ref GrantCloudFormationExecutionAccessPolicyB
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "GrantCloudFormationExecutionAccessPolicyB"]]
  GrantCloudFormationExecutionAccessPolicyC:
    Description: ARN of the IAM policy GrantCloudFormationExecutionAccessPolicyC
    Value: !Ref GrantCloudFormationExecutionAccessPolicyC
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "GrantCloudFormationExecutionAccessPolicyC"]]
  GrantCloudFormationExecutionAccessPolicyD:
    Description: ARN of the IAM policy GrantCloudFormationExecutionAccessPolicyD
    Value: !Ref GrantCloudFormationExecutionAccessPolicyD
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "GrantCloudFormationExecutionAccessPolicyD"]]
  AllowCloudFormationSecretsAccessManagedPolicy:
    Description: ARN of the IAM policy AllowCloudFormationSecretsAccessManagedPolicy
    Value: !Ref AllowCloudFormationSecretsAccessManagedPolicy
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AllowCloudFormationSecretsAccessManagedPolicy"]]
